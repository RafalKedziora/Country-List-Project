// <auto-generated />
using CountryListProjectAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CountryListProjectAPI.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20220511212550_mysqlinit")]
    partial class mysqlinit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CountryListProjectAPI.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CountryListProjectAPI.Entities.CountryRoute", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("CountryId", "RouteId");

                    b.HasIndex("RouteId");

                    b.ToTable("CountryRoute");
                });

            modelBuilder.Entity("CountryListProjectAPI.Entities.GraphRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GraphRoutes");
                });

            modelBuilder.Entity("CountryListProjectAPI.Entities.CountryRoute", b =>
                {
                    b.HasOne("CountryListProjectAPI.Entities.Country", "Country")
                        .WithMany("GraphRoutes")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CountryListProjectAPI.Entities.GraphRoute", "GraphRoute")
                        .WithMany("Countries")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("GraphRoute");
                });

            modelBuilder.Entity("CountryListProjectAPI.Entities.Country", b =>
                {
                    b.Navigation("GraphRoutes");
                });

            modelBuilder.Entity("CountryListProjectAPI.Entities.GraphRoute", b =>
                {
                    b.Navigation("Countries");
                });
#pragma warning restore 612, 618
        }
    }
}
